@*@model IEnumerable<KTGK.Models.Products>*@


@model PagedList.IPagedList<KTGK.Models.Products>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <h2>Trang chủ</h2>
    </div>
    <div class="col-md-12">
        <div class="row">
            <p class="col-md-6">
                @Html.ActionLink("Create New", "Create")
            </p>
            <p class="col-md-6">
                Sort :
                @using (Html.BeginForm(actionName: "Filter", controllerName: "Products"))
                {
                    <select name="column" class="custom-select">
                        <option selected>Filter</option>
                        @foreach (var item in ViewBag.SelectedList)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                    <input type="submit" value="Submit" />
                    @*<a href="@Url.Action("Filter", "Products")" class="btn btn-primary">Filter</a>*@
                }


            </p>
        </div>


    </div>
    <div class="col-md-12 col-sm-12 col-lg-12">
        @using (Html.BeginForm())
        {
            <p>Search Name: @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control" })</p>
            <input class="btn btn-warning" type="submit" value="Search" style="margin-bottom:10px" />
        }
    </div>
    <div class="col-md-12 col-sm-12 col-lg-12">
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Id", "Sort", new { Sorting_Order = ViewBag.SortingName })
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model)*@
                </th>
                <th>
                    @Html.ActionLink("Name", "Sort", new { Sorting_Order = ViewBag.SortingName })
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.ShortName)*@
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Note)*@
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShortName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, Page_No =>Url.Action("Index",
            new { Page_No, Sorting_Order= ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue }))
    </div>
</div>

